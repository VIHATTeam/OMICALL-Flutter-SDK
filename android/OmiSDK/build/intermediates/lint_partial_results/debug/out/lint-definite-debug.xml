<?xml version="1.0" encoding="UTF-8"?>
<incidents format="6" by="lint 7.4.2" type="incidents">

    <incident
        id="VectorPath"
        severity="warning"
        message="Very long vector path (932 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector.">
        <location
            file="${:OmiSDK*debug*sourceProvider*0*resDir*0}/drawable/ic_call_status_inbound.xml"
            line="9"
            column="27"
            startOffset="298"
            endLine="9"
            endColumn="959"
            endOffset="1230"/>
    </incident>

    <incident
        id="VectorPath"
        severity="warning"
        message="Very long vector path (1509 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector.">
        <location
            file="${:OmiSDK*debug*sourceProvider*0*resDir*0}/drawable/ic_call_status_local.xml"
            line="9"
            column="27"
            startOffset="298"
            endLine="9"
            endColumn="1536"
            endOffset="1807"/>
    </incident>

    <incident
        id="ContentDescription"
        severity="warning"
        message="Missing `contentDescription` attribute on image">
        <fix-attribute
            description="Set contentDescription"
            namespace="http://schemas.android.com/apk/res/android"
            attribute="contentDescription"
            value="TODO"
            dot="4"
            mark="0"/>
        <location
            file="${:OmiSDK*debug*sourceProvider*0*resDir*0}/layout/notification_incoming_call.xml"
            line="9"
            column="6"
            startOffset="323"
            endLine="9"
            endColumn="15"
            endOffset="332"/>
    </incident>

    <incident
        id="ObsoleteLayoutParam"
        severity="warning"
        message="Invalid layout param in a `LinearLayout`: `layout_centerVertical`">
        <location
            file="${:OmiSDK*debug*sourceProvider*0*resDir*0}/layout/notification_incoming_call.xml"
            line="19"
            column="9"
            startOffset="632"
            endLine="19"
            endColumn="45"
            endOffset="668"/>
    </incident>

    <incident
        id="ContentDescription"
        severity="warning"
        message="Missing `contentDescription` attribute on image">
        <fix-attribute
            description="Set contentDescription"
            namespace="http://schemas.android.com/apk/res/android"
            attribute="contentDescription"
            value="TODO"
            dot="4"
            mark="0"/>
        <location
            file="${:OmiSDK*debug*sourceProvider*0*resDir*0}/layout/notification_incoming_call.xml"
            line="46"
            column="6"
            startOffset="1567"
            endLine="46"
            endColumn="17"
            endOffset="1578"/>
    </incident>

    <incident
        id="ContentDescription"
        severity="warning"
        message="Missing `contentDescription` attribute on image">
        <fix-attribute
            description="Set contentDescription"
            namespace="http://schemas.android.com/apk/res/android"
            attribute="contentDescription"
            value="TODO"
            dot="4"
            mark="0"/>
        <location
            file="${:OmiSDK*debug*sourceProvider*0*resDir*0}/layout/notification_incoming_call.xml"
            line="55"
            column="6"
            startOffset="1877"
            endLine="55"
            endColumn="17"
            endOffset="1888"/>
    </incident>

    <incident
        id="DiscouragedApi"
        severity="warning"
        message="Use of this function is discouraged because resource reflection makes it harder to perform build optimizations and compile-time verification of code. It is much more efficient to retrieve resources by identifier (e.g. `R.foo.bar`) than by name (e.g. `getIdentifier(&quot;bar&quot;, &quot;foo&quot;, null)`).">
        <location
            file="${:OmiSDK*debug*sourceProvider*0*javaDir*0}/vn/vihat/omicall/omisdk/IncomingCallActivity.kt"
            line="81"
            column="45"
            startOffset="3394"
            endLine="81"
            endColumn="58"
            endOffset="3407"/>
    </incident>

    <incident
        id="DiscouragedApi"
        severity="warning"
        message="Use of this function is discouraged because resource reflection makes it harder to perform build optimizations and compile-time verification of code. It is much more efficient to retrieve resources by identifier (e.g. `R.foo.bar`) than by name (e.g. `getIdentifier(&quot;bar&quot;, &quot;foo&quot;, null)`).">
        <location
            file="${:OmiSDK*debug*sourceProvider*0*javaDir*0}/vn/vihat/omicall/omisdk/IncomingCallActivity.kt"
            line="86"
            column="48"
            startOffset="3680"
            endLine="86"
            endColumn="61"
            endOffset="3693"/>
    </incident>

    <incident
        id="DiscouragedApi"
        severity="warning"
        message="Use of this function is discouraged because resource reflection makes it harder to perform build optimizations and compile-time verification of code. It is much more efficient to retrieve resources by identifier (e.g. `R.foo.bar`) than by name (e.g. `getIdentifier(&quot;bar&quot;, &quot;foo&quot;, null)`).">
        <location
            file="${:OmiSDK*debug*sourceProvider*0*javaDir*0}/vn/vihat/omicall/omisdk/IncomingCallActivity.kt"
            line="110"
            column="46"
            startOffset="5114"
            endLine="110"
            endColumn="59"
            endOffset="5127"/>
    </incident>

    <incident
        id="StaticFieldLeak"
        severity="warning"
        message="Do not place Android context classes in static fields (static reference to `OmiClient` which has field `context` pointing to `Context`); this is a memory leak">
        <location
            file="${:OmiSDK*debug*sourceProvider*0*javaDir*0}/vn/vihat/omicall/omisdk/OmiClient.kt"
            line="1091"
            column="9"
            startOffset="39392"
            endLine="1091"
            endColumn="40"
            endOffset="39423"/>
    </incident>

    <incident
        id="HardwareIds"
        severity="warning"
        message="Using `getString` to get device identifiers is not recommended">
        <location
            file="${:OmiSDK*debug*sourceProvider*0*javaDir*0}/vn/vihat/omicall/omisdk/OmiClient.kt"
            line="322"
            column="13"
            startOffset="12383"
            endLine="322"
            endColumn="91"
            endOffset="12461"/>
    </incident>

    <incident
        id="HardwareIds"
        severity="warning"
        message="Using `getString` to get device identifiers is not recommended">
        <location
            file="${:OmiSDK*debug*sourceProvider*0*javaDir*0}/vn/vihat/omicall/omisdk/OmiClient.kt"
            line="346"
            column="13"
            startOffset="13287"
            endLine="346"
            endColumn="91"
            endOffset="13365"/>
    </incident>

    <incident
        id="DiscouragedApi"
        severity="warning"
        message="Use of this function is discouraged because resource reflection makes it harder to perform build optimizations and compile-time verification of code. It is much more efficient to retrieve resources by identifier (e.g. `R.foo.bar`) than by name (e.g. `getIdentifier(&quot;bar&quot;, &quot;foo&quot;, null)`).">
        <location
            file="${:OmiSDK*debug*sourceProvider*0*javaDir*0}/vn/vihat/omicall/omisdk/receiver/FirebaseMessageReceiver.kt"
            line="174"
            column="31"
            startOffset="7162"
            endLine="174"
            endColumn="44"
            endOffset="7175"/>
    </incident>

    <incident
        id="DiscouragedApi"
        severity="warning"
        message="Use of this function is discouraged because resource reflection makes it harder to perform build optimizations and compile-time verification of code. It is much more efficient to retrieve resources by identifier (e.g. `R.foo.bar`) than by name (e.g. `getIdentifier(&quot;bar&quot;, &quot;foo&quot;, null)`).">
        <location
            file="${:OmiSDK*debug*sourceProvider*0*javaDir*0}/vn/vihat/omicall/omisdk/receiver/FirebaseMessageReceiver.kt"
            line="231"
            column="36"
            startOffset="9525"
            endLine="231"
            endColumn="49"
            endOffset="9538"/>
    </incident>

    <incident
        id="DiscouragedApi"
        severity="warning"
        message="Use of this function is discouraged because resource reflection makes it harder to perform build optimizations and compile-time verification of code. It is much more efficient to retrieve resources by identifier (e.g. `R.foo.bar`) than by name (e.g. `getIdentifier(&quot;bar&quot;, &quot;foo&quot;, null)`).">
        <location
            file="${:OmiSDK*debug*sourceProvider*0*javaDir*0}/vn/vihat/omicall/omisdk/receiver/FirebaseMessageReceiver.kt"
            line="254"
            column="24"
            startOffset="10596"
            endLine="254"
            endColumn="37"
            endOffset="10609"/>
    </incident>

    <incident
        id="DiscouragedApi"
        severity="warning"
        message="Use of this function is discouraged because resource reflection makes it harder to perform build optimizations and compile-time verification of code. It is much more efficient to retrieve resources by identifier (e.g. `R.foo.bar`) than by name (e.g. `getIdentifier(&quot;bar&quot;, &quot;foo&quot;, null)`).">
        <location
            file="${:OmiSDK*debug*sourceProvider*0*javaDir*0}/vn/vihat/omicall/omisdk/receiver/FirebaseMessageReceiver.kt"
            line="256"
            column="24"
            startOffset="10785"
            endLine="256"
            endColumn="37"
            endOffset="10798"/>
    </incident>

    <incident
        id="WakelockTimeout"
        severity="warning"
        message="Provide a timeout when requesting a wakelock with `PowerManager.Wakelock.acquire(long timeout)`. This will ensure the OS will cleanup any wakelocks that last longer than you intend, and will save your user&apos;s battery.">
        <fix-replace
            description="Set timeout to 10 minutes"
            oldPattern="acquire\s*\(()\s*\)"
            replacement="10*60*1000L /*10 minutes*/"/>
        <location
            file="${:OmiSDK*debug*sourceProvider*0*javaDir*0}/vn/vihat/omicall/omisdk/service/NotificationBackgroundService.kt"
            line="46"
            column="9"
            startOffset="1266"
            endLine="46"
            endColumn="29"
            endOffset="1286"/>
    </incident>

    <incident
        id="DiscouragedApi"
        severity="warning"
        message="Use of this function is discouraged because resource reflection makes it harder to perform build optimizations and compile-time verification of code. It is much more efficient to retrieve resources by identifier (e.g. `R.foo.bar`) than by name (e.g. `getIdentifier(&quot;bar&quot;, &quot;foo&quot;, null)`).">
        <location
            file="${:OmiSDK*debug*sourceProvider*0*javaDir*0}/vn/vihat/omicall/omisdk/service/NotificationService.kt"
            line="156"
            column="31"
            startOffset="6589"
            endLine="156"
            endColumn="44"
            endOffset="6602"/>
    </incident>

    <incident
        id="KotlinNullnessAnnotation"
        severity="warning"
        message="Do not use `@NonNull` in Kotlin; the nullability is already implied by the Kotlin type `Task&lt;String?>` **not** ending with `?`">
        <fix-replace
            description="Delete `@NonNull`"
            robot="true"
            independent="true"
            replacement="">
            <range
                file="${:OmiSDK*debug*sourceProvider*0*javaDir*0}/vn/vihat/omicall/omisdk/utils/FirebaseUtils.kt"
                startOffset="1274"
                endOffset="1283"/>
        </fix-replace>
        <location
            file="${:OmiSDK*debug*sourceProvider*0*javaDir*0}/vn/vihat/omicall/omisdk/utils/FirebaseUtils.kt"
            line="33"
            column="41"
            startOffset="1274"
            endLine="33"
            endColumn="49"
            endOffset="1282"/>
    </incident>

    <incident
        id="CustomViewStyleable"
        severity="warning"
        message="By convention, the custom view (`ScalableVideoView`) and the declare-styleable (`scaleStyle`) should have the same name (various editor features rely on this convention)">
        <location
            file="${:OmiSDK*debug*sourceProvider*0*javaDir*0}/vn/vihat/omicall/omisdk/videoutils/ScalableVideoView.java"
            line="52"
            column="62"
            startOffset="1422"
            endLine="52"
            endColumn="84"
            endOffset="1444"/>
    </incident>

    <incident
        id="OldTargetApi"
        severity="warning"
        message="Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the android.os.Build.VERSION_CODES javadoc for details.">
        <fix-replace
            description="Update targetSdkVersion to 34"
            oldString="33"
            replacement="34"/>
        <location
            file="${:OmiSDK*projectDir}/build.gradle"
            line="15"
            column="9"
            startOffset="241"
            endLine="15"
            endColumn="21"
            endOffset="253"/>
    </incident>

    <incident
        id="GradleDependency"
        severity="warning"
        message="A newer version of androidx.lifecycle:lifecycle-process than 2.6.1 is available: 2.6.2">
        <fix-replace
            description="Change to 2.6.2"
            family="Update versions"
            oldString="2.6.1"
            replacement="2.6.2"/>
        <location
            file="${:OmiSDK*projectDir}/build.gradle"
            line="76"
            column="20"
            startOffset="1803"
            endLine="76"
            endColumn="64"
            endOffset="1847"/>
    </incident>

    <incident
        id="IconLocation"
        severity="warning"
        message="Found bitmap drawable `res/drawable/ic_inbound_btn_close.png` in densityless folder">
        <location
            file="${:OmiSDK*debug*sourceProvider*0*resDir*0}/drawable/ic_inbound_btn_close.png"/>
    </incident>

    <incident
        id="Overdraw"
        severity="warning"
        message="Possible overdraw: Root element paints background `@color/primary` with a theme that also paints a background (inferred theme is `@style/Theme_Design_NoActionBar`)">
        <location
            file="${:OmiSDK*debug*sourceProvider*0*resDir*0}/layout/incoming_call_activity.xml"
            line="8"
            column="5"
            startOffset="373"
            endLine="8"
            endColumn="40"
            endOffset="408"/>
    </incident>

</incidents>
