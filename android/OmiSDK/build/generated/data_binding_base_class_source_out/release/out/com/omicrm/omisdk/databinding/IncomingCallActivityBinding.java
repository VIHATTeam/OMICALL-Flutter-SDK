// Generated by view binder compiler. Do not edit!
package com.omicrm.omisdk.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.flexbox.FlexboxLayout;
import com.omicrm.omisdk.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class IncomingCallActivityBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final AppCompatImageView avatarContent;

  @NonNull
  public final CardView avatarWrapper;

  @NonNull
  public final LinearLayoutCompat backgroundView;

  @NonNull
  public final AppCompatImageView btnAcceptCall;

  @NonNull
  public final ConstraintLayout btnAcceptCallWrapper;

  @NonNull
  public final AppCompatImageView btnEndCall;

  @NonNull
  public final AppCompatImageView directionIcon;

  @NonNull
  public final FlexboxLayout pannelConfirm;

  @NonNull
  public final TextView remoteDisplayName;

  @NonNull
  public final TextView remoteNumber;

  @NonNull
  public final TextView remoteUuid;

  @NonNull
  public final AppCompatTextView sipNumber;

  @NonNull
  public final AppCompatTextView startAt;

  private IncomingCallActivityBinding(@NonNull LinearLayoutCompat rootView,
      @NonNull AppCompatImageView avatarContent, @NonNull CardView avatarWrapper,
      @NonNull LinearLayoutCompat backgroundView, @NonNull AppCompatImageView btnAcceptCall,
      @NonNull ConstraintLayout btnAcceptCallWrapper, @NonNull AppCompatImageView btnEndCall,
      @NonNull AppCompatImageView directionIcon, @NonNull FlexboxLayout pannelConfirm,
      @NonNull TextView remoteDisplayName, @NonNull TextView remoteNumber,
      @NonNull TextView remoteUuid, @NonNull AppCompatTextView sipNumber,
      @NonNull AppCompatTextView startAt) {
    this.rootView = rootView;
    this.avatarContent = avatarContent;
    this.avatarWrapper = avatarWrapper;
    this.backgroundView = backgroundView;
    this.btnAcceptCall = btnAcceptCall;
    this.btnAcceptCallWrapper = btnAcceptCallWrapper;
    this.btnEndCall = btnEndCall;
    this.directionIcon = directionIcon;
    this.pannelConfirm = pannelConfirm;
    this.remoteDisplayName = remoteDisplayName;
    this.remoteNumber = remoteNumber;
    this.remoteUuid = remoteUuid;
    this.sipNumber = sipNumber;
    this.startAt = startAt;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static IncomingCallActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static IncomingCallActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.incoming_call_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static IncomingCallActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.avatarContent;
      AppCompatImageView avatarContent = ViewBindings.findChildViewById(rootView, id);
      if (avatarContent == null) {
        break missingId;
      }

      id = R.id.avatarWrapper;
      CardView avatarWrapper = ViewBindings.findChildViewById(rootView, id);
      if (avatarWrapper == null) {
        break missingId;
      }

      LinearLayoutCompat backgroundView = (LinearLayoutCompat) rootView;

      id = R.id.btnAcceptCall;
      AppCompatImageView btnAcceptCall = ViewBindings.findChildViewById(rootView, id);
      if (btnAcceptCall == null) {
        break missingId;
      }

      id = R.id.btnAcceptCallWrapper;
      ConstraintLayout btnAcceptCallWrapper = ViewBindings.findChildViewById(rootView, id);
      if (btnAcceptCallWrapper == null) {
        break missingId;
      }

      id = R.id.btnEndCall;
      AppCompatImageView btnEndCall = ViewBindings.findChildViewById(rootView, id);
      if (btnEndCall == null) {
        break missingId;
      }

      id = R.id.directionIcon;
      AppCompatImageView directionIcon = ViewBindings.findChildViewById(rootView, id);
      if (directionIcon == null) {
        break missingId;
      }

      id = R.id.pannelConfirm;
      FlexboxLayout pannelConfirm = ViewBindings.findChildViewById(rootView, id);
      if (pannelConfirm == null) {
        break missingId;
      }

      id = R.id.remoteDisplayName;
      TextView remoteDisplayName = ViewBindings.findChildViewById(rootView, id);
      if (remoteDisplayName == null) {
        break missingId;
      }

      id = R.id.remoteNumber;
      TextView remoteNumber = ViewBindings.findChildViewById(rootView, id);
      if (remoteNumber == null) {
        break missingId;
      }

      id = R.id.remoteUuid;
      TextView remoteUuid = ViewBindings.findChildViewById(rootView, id);
      if (remoteUuid == null) {
        break missingId;
      }

      id = R.id.sipNumber;
      AppCompatTextView sipNumber = ViewBindings.findChildViewById(rootView, id);
      if (sipNumber == null) {
        break missingId;
      }

      id = R.id.startAt;
      AppCompatTextView startAt = ViewBindings.findChildViewById(rootView, id);
      if (startAt == null) {
        break missingId;
      }

      return new IncomingCallActivityBinding((LinearLayoutCompat) rootView, avatarContent,
          avatarWrapper, backgroundView, btnAcceptCall, btnAcceptCallWrapper, btnEndCall,
          directionIcon, pannelConfirm, remoteDisplayName, remoteNumber, remoteUuid, sipNumber,
          startAt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
